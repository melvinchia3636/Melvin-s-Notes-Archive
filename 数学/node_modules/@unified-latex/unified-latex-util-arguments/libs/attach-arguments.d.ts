import * as Ast from "@unified-latex/unified-latex-types";
import { MacroInfoRecord } from "@unified-latex/unified-latex-types";
/**
 * Search (in a right-associative way) through the array for instances of
 * `macros` and attach arguments to the macro. Argument signatures are
 * specified by `macros[].signature`.
 *
 * Info stored in `macros[].renderInfo` will be attached to the node
 * with attribute `_renderInfo`.
 */
export declare function attachMacroArgsInArray(nodes: Ast.Node[], macros: MacroInfoRecord): void;
/**
 * Recursively search for and attach the arguments for a
 * particular macro to its AST node. `macros` should
 * contain a `signature` property which specifies the arguments
 * signature in xparse syntax.
 */
export declare function attachMacroArgs(tree: Ast.Ast, macros: MacroInfoRecord): void;
//# sourceMappingURL=attach-arguments.d.ts.map