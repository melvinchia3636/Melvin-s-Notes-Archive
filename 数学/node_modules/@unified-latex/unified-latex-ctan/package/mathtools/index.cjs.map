{
  "version": 3,
  "sources": ["../../../package/mathtools/index.ts", "../../../package/mathtools/provides.ts"],
  "sourcesContent": ["export * from \"./provides\";\n", "import { MacroInfoRecord, EnvInfoRecord } from \"@unified-latex/unified-latex-types\";\n\nexport const macros: MacroInfoRecord = {\n    mathtoolsset: {\n        signature: \"m\",\n        renderInfo: { breakAround: true, pgfkeysArgs: true },\n    },\n    mathllap: {\n        signature: \"o m\",\n    },\n    mathrlap: {\n        signature: \"o m\",\n    },\n    mathclap: {\n        signature: \"o m\",\n    },\n    clap: {\n        signature: \"m\",\n    },\n    mathmbox: {\n        signature: \"m\",\n    },\n    mathmakebox: {\n        signature: \"o o m\",\n    },\n    cramped: {\n        signature: \"o m\",\n    },\n    crampedllap: {\n        signature: \"o m\",\n    },\n    crampedrlap: {\n        signature: \"o m\",\n    },\n    crampedclap: {\n        signature: \"o m\",\n    },\n    crampedsubstack: {\n        signature: \"o m\",\n    },\n    smashoperator: {\n        signature: \"o m\",\n    },\n    newtagform: {\n        signature: \"m o m m\",\n    },\n    renewtagform: {\n        signature: \"m o m m\",\n    },\n    usetagform: {\n        signature: \"m\",\n    },\n    xleftrightarrow: { signature: \"o m\" },\n    xLeftarrow: { signature: \"o m\" },\n    xhookleftarrow: { signature: \"o m\" },\n    xmapsto: { signature: \"o m\" },\n    xRightarrow: { signature: \"o m\" },\n    xLeftrightarrow: { signature: \"o m\" },\n    xhookrightarrow: { signature: \"o m\" },\n    underbracket: { signature: \"o o m\" },\n    overbracket: { signature: \"o o m\" },\n    underbrace: { signature: \"m\" },\n    overbrace: { signature: \"m\" },\n    shoveleft: { signature: \"o m\" },\n    shoveright: { signature: \"o m\" },\n    ArrowBetweenLines: { signature: \"s o\" },\n    vdotswithin: { signature: \"m\" },\n    shortdotswithin: { signature: \"s m\" },\n    DeclarePairedDelimiter: {\n        signature: \"m m m\",\n        renderInfo: { breakAround: true },\n    },\n    DeclarePairedDelimiterX: {\n        signature: \"m o m m m\",\n        renderInfo: { breakAround: true },\n    },\n    DeclarePairedDelimiterXPP: {\n        signature: \"m o m m m m m\",\n        renderInfo: { breakAround: true },\n    },\n    prescript: { signature: \"m m m\" },\n    DeclareMathSizes: { signature: \"m m m m\" },\n    newgathered: { signature: \"m m m m\" },\n    renewgathered: { signature: \"m m m m\" },\n    splitfrac: { signature: \"m m\" },\n    splitdfrac: { signature: \"m m\" },\n    xmathstrut: { signature: \"o m\" },\n    // amsthm\n    newtheorem: { signature: \"s m o m o\", renderInfo: { breakAround: true } },\n    theoremstyle: { signature: \"m\", renderInfo: { breakAround: true } },\n    newtheoremstyle: {\n        signature: \"m m m m m m m m m\",\n        renderInfo: { breakAround: true },\n    },\n    // amsmath\n    text: { signature: \"m\", renderInfo: { inMathMode: false } },\n    // amsfonts\n    mathbb: { signature: \"m\" },\n    mathscr: { signature: \"m\" },\n    mathfrak: { signature: \"m\" },\n    frak: { signature: \"m\" },\n    Bdd: { signature: \"m\" },\n    bold: { signature: \"m\" },\n    // amsopn\n    operatorname: { signature: \"s m\" },\n    DeclareMathOperator: {\n        signature: \"s m m\",\n        renderInfo: { breakAround: true },\n    },\n};\n\nexport const environments: EnvInfoRecord = {\n    crampedsubarray: {\n        signature: \"m\",\n        renderInfo: { alignContent: true, inMathMode: true },\n    },\n    matrix: { renderInfo: { alignContent: true, inMathMode: true } },\n    bmatrix: { renderInfo: { alignContent: true, inMathMode: true } },\n    pmatrix: { renderInfo: { alignContent: true, inMathMode: true } },\n    vmatrix: { renderInfo: { alignContent: true, inMathMode: true } },\n    Bmatrix: { renderInfo: { alignContent: true, inMathMode: true } },\n    Vmatrix: { renderInfo: { alignContent: true, inMathMode: true } },\n    smallmatrix: { renderInfo: { alignContent: true, inMathMode: true } },\n    psmallmatrix: { renderInfo: { alignContent: true, inMathMode: true } },\n    vsmallmatrix: { renderInfo: { alignContent: true, inMathMode: true } },\n    bsmallmatrix: { renderInfo: { alignContent: true, inMathMode: true } },\n    Bsmallmatrix: { renderInfo: { alignContent: true, inMathMode: true } },\n    Vsmallmatrix: { renderInfo: { alignContent: true, inMathMode: true } },\n    \"matrix*\": {\n        signature: \"o\",\n        renderInfo: { alignContent: true, inMathMode: true },\n    },\n    \"bmatrix*\": {\n        signature: \"o\",\n        renderInfo: { alignContent: true, inMathMode: true },\n    },\n    \"pmatrix*\": {\n        signature: \"o\",\n        renderInfo: { alignContent: true, inMathMode: true },\n    },\n    \"vmatrix*\": {\n        signature: \"o\",\n        renderInfo: { alignContent: true, inMathMode: true },\n    },\n    \"Bmatrix*\": {\n        signature: \"o\",\n        renderInfo: { alignContent: true, inMathMode: true },\n    },\n    \"Vmatrix*\": {\n        signature: \"o\",\n        renderInfo: { alignContent: true, inMathMode: true },\n    },\n    \"smallmatrix*\": {\n        signature: \"o\",\n        renderInfo: { alignContent: true, inMathMode: true },\n    },\n    \"psmallmatrix*\": {\n        signature: \"o\",\n        renderInfo: { alignContent: true, inMathMode: true },\n    },\n    \"bsmallmatrix*\": {\n        signature: \"o\",\n        renderInfo: { alignContent: true, inMathMode: true },\n    },\n    \"vsmallmatrix*\": {\n        signature: \"o\",\n        renderInfo: { alignContent: true, inMathMode: true },\n    },\n    \"Bsmallmatrix*\": {\n        signature: \"o\",\n        renderInfo: { alignContent: true, inMathMode: true },\n    },\n    \"Vsmallmatrix*\": {\n        signature: \"o\",\n        renderInfo: { alignContent: true, inMathMode: true },\n    },\n    multilined: { signature: \"o o\", renderInfo: { inMathMode: true } },\n    cases: { renderInfo: { alignContent: true, inMathMode: true } },\n    \"cases*\": { renderInfo: { alignContent: true, inMathMode: true } },\n    dcases: { renderInfo: { alignContent: true, inMathMode: true } },\n    \"dcases*\": { renderInfo: { alignContent: true, inMathMode: true } },\n    rcases: { renderInfo: { alignContent: true, inMathMode: true } },\n    \"rcases*\": { renderInfo: { alignContent: true, inMathMode: true } },\n    drcases: { renderInfo: { alignContent: true, inMathMode: true } },\n    \"drcases*\": { renderInfo: { alignContent: true, inMathMode: true } },\n    spreadlines: { signature: \"m\", renderInfo: { inMathMode: true } },\n    lgathered: { signature: \"o\", renderInfo: { inMathMode: true } },\n    rgathered: { signature: \"o\", renderInfo: { inMathMode: true } },\n    // amsmath\n    \"align*\": { renderInfo: { inMathMode: true, alignContent: true } },\n    align: { renderInfo: { inMathMode: true, alignContent: true } },\n    aligned: { renderInfo: { inMathMode: true, alignContent: true } },\n    \"alignat*\": { renderInfo: { inMathMode: true, alignContent: true } },\n    alignat: { renderInfo: { inMathMode: true, alignContent: true } },\n    \"equation*\": { renderInfo: { inMathMode: true } },\n    equation: { renderInfo: { inMathMode: true } },\n    \"gather*\": { renderInfo: { inMathMode: true } },\n    gather: { renderInfo: { inMathMode: true } },\n    \"multline*\": { renderInfo: { inMathMode: true } },\n    multline: { renderInfo: { inMathMode: true } },\n    \"flalign*\": { renderInfo: { inMathMode: true, alignContent: true } },\n    flalign: { renderInfo: { inMathMode: true, alignContent: true } },\n    split: { renderInfo: { inMathMode: true } },\n    // Math environments\n    displaymath: { renderInfo: { inMathMode: true } },\n    // Typical amsthm environments\n    theorem: { signature: \"o\" },\n    lemma: { signature: \"o\" },\n    definition: { signature: \"o\" },\n    proposition: { signature: \"o\" },\n    corollary: { signature: \"o\" },\n    remark: { signature: \"!o\" },\n    example: { signature: \"!o\" },\n    proof: { signature: \"o\" },\n};\n"],
  "mappings": "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",
  "names": []
}
