import * as Ast from "@unified-latex/unified-latex-types";
/**
 * Replace commands identified by `isStreamingCommand` with the return value of `replacer`.
 * E.g., the array `[head, streamingCommand, ...tail]` will become `[head, replacer(tail, streamingCommand)]`.
 * This function does not split based on parbreaks/etc.. It is right-associative and returns
 * the streaming commands that were encountered.
 */
export declare function replaceStreamingCommandInArray(nodes: Ast.Node[], isStreamingCommand: (node: any) => node is Ast.Macro, replacer: (content: Ast.Node[], streamingCommand: Ast.Macro) => Ast.Node | Ast.Node[]): {
    foundStreamingCommands: Ast.Node[];
};
//# sourceMappingURL=replace-streaming-command-in-array.d.ts.map