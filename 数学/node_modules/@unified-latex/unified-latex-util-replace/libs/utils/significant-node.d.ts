import * as Ast from "@unified-latex/unified-latex-types";
/**
 * Returns the first non-whitespace/non-comment node in `nodes`. If there is no such
 * node, `null` is returned.
 */
export declare function firstSignificantNode(nodes: Ast.Node[], parbreaksAreInsignificant?: boolean): Ast.Node | null;
/**
 * Returns the last non-whitespace/non-comment node in `nodes`. If there is no such
 * node, `null` is returned.
 */
export declare function lastSignificantNode(nodes: Ast.Node[], parbreaksAreInsignificant?: boolean): Ast.Node | null;
/**
 * Returns the index of the last non-whitespace/non-comment node in `nodes`. If there is no such
 * node, `null` is returned.
 */
export declare function lastSignificantNodeIndex(nodes: Ast.Node[], parbreaksAreInsignificant?: boolean): number | undefined;
/**
 * Returns the index of the first non-whitespace/non-comment node in `nodes`. If there is no such
 * node, `null` is returned.
 */
export declare function firstSignificantNodeIndex(nodes: Ast.Node[], parbreaksAreInsignificant?: boolean): number | undefined;
//# sourceMappingURL=significant-node.d.ts.map