import * as Ast from "@unified-latex/unified-latex-types";
import { VisitorContext } from "@unified-latex/unified-latex-util-visit";
/**
 * Recursively replace nodes in `ast`. The `visitor` function is called on each node. If
 * `visitor` returns a node or an array of nodes, those nodes replace the node passed to `visitor`.
 * If `null` is returned, the node is deleted. If `undefined` is returned, no replacement happens.
 */
export declare function replaceNode(ast: Ast.Ast, visitor: (node: Ast.Node | Ast.Argument, context: VisitorContext) => Ast.Node | Ast.Argument | (Ast.Node | Ast.Argument)[] | null | undefined | void): void;
//# sourceMappingURL=replace-node.d.ts.map