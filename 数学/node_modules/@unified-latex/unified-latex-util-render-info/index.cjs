var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// index.ts
var unified_latex_util_render_info_exports = {};
__export(unified_latex_util_render_info_exports, {
  trimRenderInfo: () => trimRenderInfo,
  updateRenderInfo: () => updateRenderInfo
});
module.exports = __toCommonJS(unified_latex_util_render_info_exports);
var import_unified_latex_util_visit = require("@unified-latex/unified-latex-util-visit");
function updateRenderInfo(node, renderInfo) {
  if (renderInfo != null) {
    node._renderInfo = __spreadValues(__spreadValues({}, node._renderInfo || {}), renderInfo);
  }
  return node;
}
function trimRenderInfo(ast) {
  (0, import_unified_latex_util_visit.visit)(ast, (node) => {
    delete node._renderInfo;
    delete node.position;
  });
  return ast;
}
//# sourceMappingURL=index.cjs.map
