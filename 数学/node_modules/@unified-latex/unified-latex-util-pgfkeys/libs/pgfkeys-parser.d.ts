import * as Ast from "@unified-latex/unified-latex-types";
export declare type Item = {
    itemParts?: Ast.Node[][];
    trailingComment: Ast.Comment | null;
    trailingComma?: boolean;
    leadingParbreak?: boolean;
};
export declare function createMatchers(): {
    isComma: (node: Ast.Node) => boolean;
    isEquals: (node: Ast.Node) => boolean;
    isWhitespace: (node: Ast.Node) => boolean;
    isParbreak: (node: Ast.Node) => boolean;
    isSameLineComment: (node: Ast.Node) => boolean | undefined;
    isOwnLineComment: (node: Ast.Node) => boolean;
};
/**
 * Parse the arguments of a Pgfkeys macro. The `ast`
 * is expected to be a comma separated list of `Item`s.
 * Each item can have 0 or more item parts, which are separated
 * by "=". If `itemPart` is undefined,
 *
 * @export
 * @param {Ast.Node[]} ast
 * @returns {Item[]}
 */
export declare function parsePgfkeys(ast: Ast.Node[]): Item[];
//# sourceMappingURL=pgfkeys-parser.d.ts.map