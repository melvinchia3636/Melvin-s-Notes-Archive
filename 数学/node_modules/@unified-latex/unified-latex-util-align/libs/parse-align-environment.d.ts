import * as Ast from "@unified-latex/unified-latex-types";
interface RowItems {
    cells: Ast.Node[][];
    colSeps: Ast.String[];
}
interface Row extends RowItems {
    rowSep: Ast.Macro | null;
    trailingComment: Ast.Comment | null;
}
export declare function createMatchers(rowSepMacros: string[], colSep: string[]): {
    isRowSep: Ast.TypeGuard<Ast.Macro>;
    isColSep: (node: Ast.Node) => boolean;
    isWhitespace: (node: Ast.Node) => boolean;
    isSameLineComment: (node: Ast.Node) => boolean | undefined;
    isOwnLineComment: (node: Ast.Node) => boolean;
};
/**
 * Parse the content of an align environment into an array of row objects.
 * Each row object looks like
 * ```
 *  {
 *    cells: [...],
 *    colSeps: [...],
 *    rowSep: ...,
 *    trailingComment: ...
 *  }
 * ```
 * `...` may be an ast node or `null`.
 *
 * @export
 * @param {[object]} ast
 * @param {string} [colSep=["&"]]
 * @param {string} [rowSepMacros=["\\", "hline", "cr"]]
 * @returns
 */
export declare function parseAlignEnvironment(ast: Ast.Node[], colSep?: string[], rowSepMacros?: string[]): Row[];
export {};
//# sourceMappingURL=parse-align-environment.d.ts.map