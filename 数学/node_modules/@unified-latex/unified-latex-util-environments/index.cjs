var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// index.ts
var unified_latex_util_environments_exports = {};
__export(unified_latex_util_environments_exports, {
  processEnvironment: () => processEnvironment,
  processEnvironments: () => processEnvironments,
  unifiedLatexProcessEnvironments: () => unifiedLatexProcessEnvironments
});
module.exports = __toCommonJS(unified_latex_util_environments_exports);

// libs/process-environment.ts
var import_unified_latex_util_render_info = require("@unified-latex/unified-latex-util-render-info");
var import_unified_latex_util_arguments = require("@unified-latex/unified-latex-util-arguments");
var import_unified_latex_util_match = require("@unified-latex/unified-latex-util-match");
var import_unified_latex_util_visit = require("@unified-latex/unified-latex-util-visit");
var import_unified_latex_util_print_raw = require("@unified-latex/unified-latex-util-print-raw");
function processEnvironment(envNode, envInfo) {
  if (envInfo.signature && envNode.args == null) {
    const { args } = (0, import_unified_latex_util_arguments.gobbleArguments)(envNode.content, envInfo.signature);
    envNode.args = args;
  }
  (0, import_unified_latex_util_render_info.updateRenderInfo)(envNode, envInfo.renderInfo);
  if (typeof envInfo.processContent === "function") {
    envNode.content = envInfo.processContent(envNode.content);
  }
}
function processEnvironments(tree, environments) {
  const isRelevantEnvironment = import_unified_latex_util_match.match.createEnvironmentMatcher(environments);
  (0, import_unified_latex_util_visit.visit)(tree, {
    leave: (node) => {
      const envName = (0, import_unified_latex_util_print_raw.printRaw)(node.env);
      const envInfo = environments[envName];
      if (!envInfo) {
        throw new Error(`Could not find environment info for environment "${envName}"`);
      }
      processEnvironment(node, envInfo);
    }
  }, { test: isRelevantEnvironment });
}

// libs/unified-latex-process-environment.ts
var import_unified_latex_util_visit2 = require("@unified-latex/unified-latex-util-visit");
var import_unified_latex_util_match2 = require("@unified-latex/unified-latex-util-match");
var import_unified_latex_util_print_raw2 = require("@unified-latex/unified-latex-util-print-raw");
var unifiedLatexProcessEnvironments = function unifiedLatexAttachMacroArguments(options) {
  const { environments = {} } = options || {};
  const isRelevantEnvironment = import_unified_latex_util_match2.match.createEnvironmentMatcher(environments);
  return (tree) => {
    if (Object.keys(environments).length === 0) {
      console.warn("Attempting to attach macro arguments but no macros are specified.");
    }
    (0, import_unified_latex_util_visit2.visit)(tree, {
      leave: (node) => {
        const envName = (0, import_unified_latex_util_print_raw2.printRaw)(node.env);
        const envInfo = environments[envName];
        if (!envInfo) {
          throw new Error(`Could not find environment info for environment "${envName}"`);
        }
        processEnvironment(node, envInfo);
      }
    }, { test: isRelevantEnvironment });
  };
};
//# sourceMappingURL=index.cjs.map
